services:
  scraper:
    build:
      context: .
      dockerfile: Scraper.dockerfile
    container_name: yahoo_scraper
    depends_on:
      - db
    volumes:
      - ./yahoo_scraper.py:/app/yahoo_scraper.py
    environment:
    - MYSQL_HOST=db    
    - MYSQL_PORT=3306 
    - MYSQL_USER=Acelino
    - MYSQL_PASS=senha123
    - MYSQL_DB=projeto_crypto
    command: >
      python yahoo_scraper.py
        --tickers BTC-USD,ETH-USD,BNB-USD,SOL-USD,XRP-USD,ADA-USD,DOGE-USD,AVAX-USD,LINK-USD,DOT-USD,LTC-USD,ATOM-USD,SHIB-USD
        --period 7d
        --interval 1h
    ports:
    - "8000:8000"
    restart: unless-stopped
    networks:
    - monitoramento

  collector:
    build:
      context: .
      dockerfile: Collector.dockerfile
    container_name: collector
    ports:
    - "9000:9000"
    environment:
    - FLASK_ENV=production
    restart: unless-stopped
    depends_on:
    - prometheus
    networks:
    - monitoramento

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
    - "8443:8443"
    depends_on:
    - collector
    environment:
    - NIFI_WEB_HTTPS_PORT=8443
    - SINGLE_USER_CREDENTIALS_USERNAME=admin
    - SINGLE_USER_CREDENTIALS_PASSWORD=admin1234567890
    extra_hosts:
    - "host.docker.internal:host-gateway"
    # Volumes para persistÃªncia
    volumes:
    - "C:/Users/aceli/Downloads/Livros AI/nifi-2.5.0-bin/nifi-2.5.0/conf:/opt/nifi/nifi-current/conf"
    - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
    - nifi_content:/opt/nifi/nifi-current/content_repository
    - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
    - nifi_database:/opt/nifi/nifi-current/database_repository
    - nifi_logs:/opt/nifi/nifi-current/logs
    networks:
    - monitoramento
    restart: unless-stopped

  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./recording-rules.yaml:/etc/prometheus/recording-rules.yaml
      - ./alert.rules.yaml:/etc/prometheus/alert.rules.yaml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - monitoramento

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoramento
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager-pipeline
    volumes:
      - ./alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
      - alertmanager_data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'
    ports:
      - "9093:9093"
    networks:
      - monitoramento

  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: senha123
      MYSQL_DATABASE: projeto_crypto
      MYSQL_USER: Acelino
      MYSQL_PASSWORD: senha123
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped
    networks:
    - monitoramento

volumes:
  grafana_data:
  prometheus_data:
  alertmanager_data:
  db_data:
  nifi_flowfile:
  nifi_content:
  nifi_provenance:
  nifi_database:
  nifi_logs:

networks:
  monitoramento:
    driver: bridge
